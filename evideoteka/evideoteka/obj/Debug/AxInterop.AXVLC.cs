//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("1.0.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("02/27/2015 15:21:24")]

namespace AxAXVLC {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{e23fe9c6-778e-49d4-b537-38fcde4887d8}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    public class AxVLCPlugin : System.Windows.Forms.AxHost {
        
        private AXVLC.IVLCControl ocx;
        
        private AxVLCPluginEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxVLCPlugin() : 
                base("e23fe9c6-778e-49d4-b537-38fcde4887d8") {
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(100)]
        [System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
        public virtual bool CtlVisible {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Visible;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Visible = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(101)]
        public virtual bool Playing {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Playing", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Playing;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(102)]
        public virtual float Position {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Position", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Position;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Position", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Position = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(103)]
        public virtual int Time {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Time", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Time;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Time", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Time = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(104)]
        public virtual int Length {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Length", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Length;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(105)]
        public virtual int Volume {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Volume", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Volume;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Volume", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Volume = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1610743829)]
        public virtual int PlaylistIndex {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PlaylistIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PlaylistIndex;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1610743830)]
        public virtual int PlaylistCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PlaylistCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PlaylistCount;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1610743834)]
        public virtual string VersionInfo {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VersionInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.VersionInfo;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(106)]
        public virtual string MRL {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MRL", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MRL;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MRL", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MRL = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(107)]
        public virtual bool AutoPlay {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoPlay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoPlay;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoPlay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoPlay = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(108)]
        public virtual bool AutoLoop {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoLoop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoLoop;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoLoop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoLoop = value;
            }
        }
        
        public event System.EventHandler playEvent;
        
        public event System.EventHandler pauseEvent;
        
        public event System.EventHandler stopEvent;
        
        public event System.EventHandler MediaPlayerNothingSpecial;
        
        public event System.EventHandler MediaPlayerOpening;
        
        public event DVLCEvents_MediaPlayerBufferingEventHandler MediaPlayerBuffering;
        
        public event System.EventHandler MediaPlayerPlaying;
        
        public event System.EventHandler MediaPlayerPaused;
        
        public event System.EventHandler MediaPlayerForward;
        
        public event System.EventHandler MediaPlayerBackward;
        
        public event System.EventHandler MediaPlayerEncounteredError;
        
        public event System.EventHandler MediaPlayerEndReached;
        
        public event System.EventHandler MediaPlayerStopped;
        
        public event DVLCEvents_MediaPlayerTimeChangedEventHandler MediaPlayerTimeChanged;
        
        public event DVLCEvents_MediaPlayerPositionChangedEventHandler MediaPlayerPositionChanged;
        
        public event DVLCEvents_MediaPlayerSeekableChangedEventHandler MediaPlayerSeekableChanged;
        
        public event DVLCEvents_MediaPlayerPausableChangedEventHandler MediaPlayerPausableChanged;
        
        public event System.EventHandler MediaPlayerMediaChanged;
        
        public event DVLCEvents_MediaPlayerTitleChangedEventHandler MediaPlayerTitleChanged;
        
        public event DVLCEvents_MediaPlayerLengthChangedEventHandler MediaPlayerLengthChanged;
        
        public virtual void play() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("play", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.play();
        }
        
        public virtual void pause() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("pause", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.pause();
        }
        
        public virtual void stop() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("stop", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.stop();
        }
        
        public virtual void shuttle(int seconds) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("shuttle", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.shuttle(seconds);
        }
        
        public virtual void fullscreen() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("fullscreen", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.fullscreen();
        }
        
        public virtual void playFaster() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("playFaster", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.playFaster();
        }
        
        public virtual void playSlower() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("playSlower", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.playSlower();
        }
        
        public virtual void toggleMute() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("toggleMute", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.toggleMute();
        }
        
        public virtual void setVariable(string name, object value) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("setVariable", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.setVariable(name, value);
        }
        
        public virtual object getVariable(string name) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("getVariable", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.getVariable(name)));
            return returnValue;
        }
        
        public virtual void addTarget(string uri, object options, AXVLC.VLCPlaylistMode mode, int position) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("addTarget", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.addTarget(uri, options, mode, position);
        }
        
        public virtual void playlistNext() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("playlistNext", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.playlistNext();
        }
        
        public virtual void playlistPrev() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("playlistPrev", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.playlistPrev();
        }
        
        public virtual void playlistClear() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("playlistClear", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.playlistClear();
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxVLCPluginEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(AXVLC.DVLCEvents));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((AXVLC.IVLCControl)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnplayEvent(object sender, System.EventArgs e) {
            if ((this.playEvent != null)) {
                this.playEvent(sender, e);
            }
        }
        
        internal void RaiseOnpauseEvent(object sender, System.EventArgs e) {
            if ((this.pauseEvent != null)) {
                this.pauseEvent(sender, e);
            }
        }
        
        internal void RaiseOnstopEvent(object sender, System.EventArgs e) {
            if ((this.stopEvent != null)) {
                this.stopEvent(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerNothingSpecial(object sender, System.EventArgs e) {
            if ((this.MediaPlayerNothingSpecial != null)) {
                this.MediaPlayerNothingSpecial(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerOpening(object sender, System.EventArgs e) {
            if ((this.MediaPlayerOpening != null)) {
                this.MediaPlayerOpening(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerBuffering(object sender, DVLCEvents_MediaPlayerBufferingEvent e) {
            if ((this.MediaPlayerBuffering != null)) {
                this.MediaPlayerBuffering(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerPlaying(object sender, System.EventArgs e) {
            if ((this.MediaPlayerPlaying != null)) {
                this.MediaPlayerPlaying(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerPaused(object sender, System.EventArgs e) {
            if ((this.MediaPlayerPaused != null)) {
                this.MediaPlayerPaused(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerForward(object sender, System.EventArgs e) {
            if ((this.MediaPlayerForward != null)) {
                this.MediaPlayerForward(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerBackward(object sender, System.EventArgs e) {
            if ((this.MediaPlayerBackward != null)) {
                this.MediaPlayerBackward(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerEncounteredError(object sender, System.EventArgs e) {
            if ((this.MediaPlayerEncounteredError != null)) {
                this.MediaPlayerEncounteredError(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerEndReached(object sender, System.EventArgs e) {
            if ((this.MediaPlayerEndReached != null)) {
                this.MediaPlayerEndReached(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerStopped(object sender, System.EventArgs e) {
            if ((this.MediaPlayerStopped != null)) {
                this.MediaPlayerStopped(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerTimeChanged(object sender, DVLCEvents_MediaPlayerTimeChangedEvent e) {
            if ((this.MediaPlayerTimeChanged != null)) {
                this.MediaPlayerTimeChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerPositionChanged(object sender, DVLCEvents_MediaPlayerPositionChangedEvent e) {
            if ((this.MediaPlayerPositionChanged != null)) {
                this.MediaPlayerPositionChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerSeekableChanged(object sender, DVLCEvents_MediaPlayerSeekableChangedEvent e) {
            if ((this.MediaPlayerSeekableChanged != null)) {
                this.MediaPlayerSeekableChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerPausableChanged(object sender, DVLCEvents_MediaPlayerPausableChangedEvent e) {
            if ((this.MediaPlayerPausableChanged != null)) {
                this.MediaPlayerPausableChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerMediaChanged(object sender, System.EventArgs e) {
            if ((this.MediaPlayerMediaChanged != null)) {
                this.MediaPlayerMediaChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerTitleChanged(object sender, DVLCEvents_MediaPlayerTitleChangedEvent e) {
            if ((this.MediaPlayerTitleChanged != null)) {
                this.MediaPlayerTitleChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerLengthChanged(object sender, DVLCEvents_MediaPlayerLengthChangedEvent e) {
            if ((this.MediaPlayerLengthChanged != null)) {
                this.MediaPlayerLengthChanged(sender, e);
            }
        }
    }
    
    public delegate void DVLCEvents_MediaPlayerBufferingEventHandler(object sender, DVLCEvents_MediaPlayerBufferingEvent e);
    
    public class DVLCEvents_MediaPlayerBufferingEvent {
        
        public int cache;
        
        public DVLCEvents_MediaPlayerBufferingEvent(int cache) {
            this.cache = cache;
        }
    }
    
    public delegate void DVLCEvents_MediaPlayerTimeChangedEventHandler(object sender, DVLCEvents_MediaPlayerTimeChangedEvent e);
    
    public class DVLCEvents_MediaPlayerTimeChangedEvent {
        
        public int time;
        
        public DVLCEvents_MediaPlayerTimeChangedEvent(int time) {
            this.time = time;
        }
    }
    
    public delegate void DVLCEvents_MediaPlayerPositionChangedEventHandler(object sender, DVLCEvents_MediaPlayerPositionChangedEvent e);
    
    public class DVLCEvents_MediaPlayerPositionChangedEvent {
        
        public float position;
        
        public DVLCEvents_MediaPlayerPositionChangedEvent(float position) {
            this.position = position;
        }
    }
    
    public delegate void DVLCEvents_MediaPlayerSeekableChangedEventHandler(object sender, DVLCEvents_MediaPlayerSeekableChangedEvent e);
    
    public class DVLCEvents_MediaPlayerSeekableChangedEvent {
        
        public bool seekable;
        
        public DVLCEvents_MediaPlayerSeekableChangedEvent(bool seekable) {
            this.seekable = seekable;
        }
    }
    
    public delegate void DVLCEvents_MediaPlayerPausableChangedEventHandler(object sender, DVLCEvents_MediaPlayerPausableChangedEvent e);
    
    public class DVLCEvents_MediaPlayerPausableChangedEvent {
        
        public bool pausable;
        
        public DVLCEvents_MediaPlayerPausableChangedEvent(bool pausable) {
            this.pausable = pausable;
        }
    }
    
    public delegate void DVLCEvents_MediaPlayerTitleChangedEventHandler(object sender, DVLCEvents_MediaPlayerTitleChangedEvent e);
    
    public class DVLCEvents_MediaPlayerTitleChangedEvent {
        
        public int title;
        
        public DVLCEvents_MediaPlayerTitleChangedEvent(int title) {
            this.title = title;
        }
    }
    
    public delegate void DVLCEvents_MediaPlayerLengthChangedEventHandler(object sender, DVLCEvents_MediaPlayerLengthChangedEvent e);
    
    public class DVLCEvents_MediaPlayerLengthChangedEvent {
        
        public int length;
        
        public DVLCEvents_MediaPlayerLengthChangedEvent(int length) {
            this.length = length;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxVLCPluginEventMulticaster : AXVLC.DVLCEvents {
        
        private AxVLCPlugin parent;
        
        public AxVLCPluginEventMulticaster(AxVLCPlugin parent) {
            this.parent = parent;
        }
        
        public virtual void play() {
            System.EventArgs playEvent = new System.EventArgs();
            this.parent.RaiseOnplayEvent(this.parent, playEvent);
        }
        
        public virtual void pause() {
            System.EventArgs pauseEvent = new System.EventArgs();
            this.parent.RaiseOnpauseEvent(this.parent, pauseEvent);
        }
        
        public virtual void stop() {
            System.EventArgs stopEvent = new System.EventArgs();
            this.parent.RaiseOnstopEvent(this.parent, stopEvent);
        }
        
        public virtual void MediaPlayerNothingSpecial() {
            System.EventArgs mediaplayernothingspecialEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerNothingSpecial(this.parent, mediaplayernothingspecialEvent);
        }
        
        public virtual void MediaPlayerOpening() {
            System.EventArgs mediaplayeropeningEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerOpening(this.parent, mediaplayeropeningEvent);
        }
        
        public virtual void MediaPlayerBuffering(int cache) {
            DVLCEvents_MediaPlayerBufferingEvent mediaplayerbufferingEvent = new DVLCEvents_MediaPlayerBufferingEvent(cache);
            this.parent.RaiseOnMediaPlayerBuffering(this.parent, mediaplayerbufferingEvent);
        }
        
        public virtual void MediaPlayerPlaying() {
            System.EventArgs mediaplayerplayingEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerPlaying(this.parent, mediaplayerplayingEvent);
        }
        
        public virtual void MediaPlayerPaused() {
            System.EventArgs mediaplayerpausedEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerPaused(this.parent, mediaplayerpausedEvent);
        }
        
        public virtual void MediaPlayerForward() {
            System.EventArgs mediaplayerforwardEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerForward(this.parent, mediaplayerforwardEvent);
        }
        
        public virtual void MediaPlayerBackward() {
            System.EventArgs mediaplayerbackwardEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerBackward(this.parent, mediaplayerbackwardEvent);
        }
        
        public virtual void MediaPlayerEncounteredError() {
            System.EventArgs mediaplayerencounterederrorEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerEncounteredError(this.parent, mediaplayerencounterederrorEvent);
        }
        
        public virtual void MediaPlayerEndReached() {
            System.EventArgs mediaplayerendreachedEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerEndReached(this.parent, mediaplayerendreachedEvent);
        }
        
        public virtual void MediaPlayerStopped() {
            System.EventArgs mediaplayerstoppedEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerStopped(this.parent, mediaplayerstoppedEvent);
        }
        
        public virtual void MediaPlayerTimeChanged(int time) {
            DVLCEvents_MediaPlayerTimeChangedEvent mediaplayertimechangedEvent = new DVLCEvents_MediaPlayerTimeChangedEvent(time);
            this.parent.RaiseOnMediaPlayerTimeChanged(this.parent, mediaplayertimechangedEvent);
        }
        
        public virtual void MediaPlayerPositionChanged(float position) {
            DVLCEvents_MediaPlayerPositionChangedEvent mediaplayerpositionchangedEvent = new DVLCEvents_MediaPlayerPositionChangedEvent(position);
            this.parent.RaiseOnMediaPlayerPositionChanged(this.parent, mediaplayerpositionchangedEvent);
        }
        
        public virtual void MediaPlayerSeekableChanged(bool seekable) {
            DVLCEvents_MediaPlayerSeekableChangedEvent mediaplayerseekablechangedEvent = new DVLCEvents_MediaPlayerSeekableChangedEvent(seekable);
            this.parent.RaiseOnMediaPlayerSeekableChanged(this.parent, mediaplayerseekablechangedEvent);
        }
        
        public virtual void MediaPlayerPausableChanged(bool pausable) {
            DVLCEvents_MediaPlayerPausableChangedEvent mediaplayerpausablechangedEvent = new DVLCEvents_MediaPlayerPausableChangedEvent(pausable);
            this.parent.RaiseOnMediaPlayerPausableChanged(this.parent, mediaplayerpausablechangedEvent);
        }
        
        public virtual void MediaPlayerMediaChanged() {
            System.EventArgs mediaplayermediachangedEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerMediaChanged(this.parent, mediaplayermediachangedEvent);
        }
        
        public virtual void MediaPlayerTitleChanged(int title) {
            DVLCEvents_MediaPlayerTitleChangedEvent mediaplayertitlechangedEvent = new DVLCEvents_MediaPlayerTitleChangedEvent(title);
            this.parent.RaiseOnMediaPlayerTitleChanged(this.parent, mediaplayertitlechangedEvent);
        }
        
        public virtual void MediaPlayerLengthChanged(int length) {
            DVLCEvents_MediaPlayerLengthChangedEvent mediaplayerlengthchangedEvent = new DVLCEvents_MediaPlayerLengthChangedEvent(length);
            this.parent.RaiseOnMediaPlayerLengthChanged(this.parent, mediaplayerlengthchangedEvent);
        }
    }
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{9be31822-fdad-461b-ad51-be1d1c159921}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    public class AxVLCPlugin2 : System.Windows.Forms.AxHost {
        
        private AXVLC.IVLCControl2 ocx;
        
        private AxVLCPlugin2EventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxVLCPlugin2() : 
                base("9be31822-fdad-461b-ad51-be1d1c159921") {
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(108)]
        public virtual bool AutoLoop {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoLoop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoLoop;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoLoop", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoLoop = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(107)]
        public virtual bool AutoPlay {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoPlay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoPlay;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoPlay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoPlay = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(110)]
        public virtual string BaseURL {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BaseURL", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BaseURL;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BaseURL", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BaseURL = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(109)]
        public virtual int StartTime {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StartTime", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.StartTime;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StartTime", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.StartTime = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(106)]
        public virtual string MRL {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MRL", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MRL;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MRL", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MRL = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(100)]
        public virtual bool CtlVisible {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Visible;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Visible = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(105)]
        public virtual int Volume {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Volume", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Volume;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Volume", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Volume = value;
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-501)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public override System.Drawing.Color BackColor {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return GetColorFromOleColor(((uint)(this.ocx.BackColor)));
                }
                else {
                    return base.BackColor;
                }
            }
            set {
                base.BackColor = value;
                if ((this.ocx != null)) {
                    this.ocx.BackColor = ((uint)(GetOleColorFromColor(value)));
                }
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(111)]
        public virtual bool Toolbar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Toolbar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Toolbar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Toolbar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Toolbar = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1610743828)]
        public virtual AXVLC.IVLCAudio audio {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("audio", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.audio;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1610743829)]
        public virtual AXVLC.IVLCInput input {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("input", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.input;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1610743830)]
        public virtual AXVLC.IVLCPlaylist playlist {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("playlist", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.playlist;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1610743831)]
        public virtual AXVLC.IVLCSubtitle subtitle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("subtitle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.subtitle;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1610743832)]
        public virtual AXVLC.IVLCVideo video {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("video", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.video;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(112)]
        public virtual bool FullscreenEnabled {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FullscreenEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FullscreenEnabled;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FullscreenEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FullscreenEnabled = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1610743835)]
        public virtual AXVLC.IVLCMediaDescription mediaDescription {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("mediaDescription", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.mediaDescription;
            }
        }
        
        public event System.EventHandler play;
        
        public event System.EventHandler pause;
        
        public event System.EventHandler stop;
        
        public event System.EventHandler MediaPlayerNothingSpecial;
        
        public event System.EventHandler MediaPlayerOpening;
        
        public event DVLCEvents_MediaPlayerBufferingEventHandler MediaPlayerBuffering;
        
        public event System.EventHandler MediaPlayerPlaying;
        
        public event System.EventHandler MediaPlayerPaused;
        
        public event System.EventHandler MediaPlayerForward;
        
        public event System.EventHandler MediaPlayerBackward;
        
        public event System.EventHandler MediaPlayerEncounteredError;
        
        public event System.EventHandler MediaPlayerEndReached;
        
        public event System.EventHandler MediaPlayerStopped;
        
        public event DVLCEvents_MediaPlayerTimeChangedEventHandler MediaPlayerTimeChanged;
        
        public event DVLCEvents_MediaPlayerPositionChangedEventHandler MediaPlayerPositionChanged;
        
        public event DVLCEvents_MediaPlayerSeekableChangedEventHandler MediaPlayerSeekableChanged;
        
        public event DVLCEvents_MediaPlayerPausableChangedEventHandler MediaPlayerPausableChanged;
        
        public event System.EventHandler MediaPlayerMediaChanged;
        
        public event DVLCEvents_MediaPlayerTitleChangedEventHandler MediaPlayerTitleChanged;
        
        public event DVLCEvents_MediaPlayerLengthChangedEventHandler MediaPlayerLengthChanged;
        
        public virtual string get_VersionInfo() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_VersionInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_VersionInfo()));
            return returnValue;
        }
        
        public virtual string VersionInfo() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VersionInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.VersionInfo()));
            return returnValue;
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxVLCPlugin2EventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(AXVLC.DVLCEvents));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((AXVLC.IVLCControl2)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnplay(object sender, System.EventArgs e) {
            if ((this.play != null)) {
                this.play(sender, e);
            }
        }
        
        internal void RaiseOnpause(object sender, System.EventArgs e) {
            if ((this.pause != null)) {
                this.pause(sender, e);
            }
        }
        
        internal void RaiseOnstop(object sender, System.EventArgs e) {
            if ((this.stop != null)) {
                this.stop(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerNothingSpecial(object sender, System.EventArgs e) {
            if ((this.MediaPlayerNothingSpecial != null)) {
                this.MediaPlayerNothingSpecial(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerOpening(object sender, System.EventArgs e) {
            if ((this.MediaPlayerOpening != null)) {
                this.MediaPlayerOpening(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerBuffering(object sender, DVLCEvents_MediaPlayerBufferingEvent e) {
            if ((this.MediaPlayerBuffering != null)) {
                this.MediaPlayerBuffering(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerPlaying(object sender, System.EventArgs e) {
            if ((this.MediaPlayerPlaying != null)) {
                this.MediaPlayerPlaying(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerPaused(object sender, System.EventArgs e) {
            if ((this.MediaPlayerPaused != null)) {
                this.MediaPlayerPaused(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerForward(object sender, System.EventArgs e) {
            if ((this.MediaPlayerForward != null)) {
                this.MediaPlayerForward(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerBackward(object sender, System.EventArgs e) {
            if ((this.MediaPlayerBackward != null)) {
                this.MediaPlayerBackward(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerEncounteredError(object sender, System.EventArgs e) {
            if ((this.MediaPlayerEncounteredError != null)) {
                this.MediaPlayerEncounteredError(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerEndReached(object sender, System.EventArgs e) {
            if ((this.MediaPlayerEndReached != null)) {
                this.MediaPlayerEndReached(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerStopped(object sender, System.EventArgs e) {
            if ((this.MediaPlayerStopped != null)) {
                this.MediaPlayerStopped(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerTimeChanged(object sender, DVLCEvents_MediaPlayerTimeChangedEvent e) {
            if ((this.MediaPlayerTimeChanged != null)) {
                this.MediaPlayerTimeChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerPositionChanged(object sender, DVLCEvents_MediaPlayerPositionChangedEvent e) {
            if ((this.MediaPlayerPositionChanged != null)) {
                this.MediaPlayerPositionChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerSeekableChanged(object sender, DVLCEvents_MediaPlayerSeekableChangedEvent e) {
            if ((this.MediaPlayerSeekableChanged != null)) {
                this.MediaPlayerSeekableChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerPausableChanged(object sender, DVLCEvents_MediaPlayerPausableChangedEvent e) {
            if ((this.MediaPlayerPausableChanged != null)) {
                this.MediaPlayerPausableChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerMediaChanged(object sender, System.EventArgs e) {
            if ((this.MediaPlayerMediaChanged != null)) {
                this.MediaPlayerMediaChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerTitleChanged(object sender, DVLCEvents_MediaPlayerTitleChangedEvent e) {
            if ((this.MediaPlayerTitleChanged != null)) {
                this.MediaPlayerTitleChanged(sender, e);
            }
        }
        
        internal void RaiseOnMediaPlayerLengthChanged(object sender, DVLCEvents_MediaPlayerLengthChangedEvent e) {
            if ((this.MediaPlayerLengthChanged != null)) {
                this.MediaPlayerLengthChanged(sender, e);
            }
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxVLCPlugin2EventMulticaster : AXVLC.DVLCEvents {
        
        private AxVLCPlugin2 parent;
        
        public AxVLCPlugin2EventMulticaster(AxVLCPlugin2 parent) {
            this.parent = parent;
        }
        
        public virtual void play() {
            System.EventArgs playEvent = new System.EventArgs();
            this.parent.RaiseOnplay(this.parent, playEvent);
        }
        
        public virtual void pause() {
            System.EventArgs pauseEvent = new System.EventArgs();
            this.parent.RaiseOnpause(this.parent, pauseEvent);
        }
        
        public virtual void stop() {
            System.EventArgs stopEvent = new System.EventArgs();
            this.parent.RaiseOnstop(this.parent, stopEvent);
        }
        
        public virtual void MediaPlayerNothingSpecial() {
            System.EventArgs mediaplayernothingspecialEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerNothingSpecial(this.parent, mediaplayernothingspecialEvent);
        }
        
        public virtual void MediaPlayerOpening() {
            System.EventArgs mediaplayeropeningEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerOpening(this.parent, mediaplayeropeningEvent);
        }
        
        public virtual void MediaPlayerBuffering(int cache) {
            DVLCEvents_MediaPlayerBufferingEvent mediaplayerbufferingEvent = new DVLCEvents_MediaPlayerBufferingEvent(cache);
            this.parent.RaiseOnMediaPlayerBuffering(this.parent, mediaplayerbufferingEvent);
        }
        
        public virtual void MediaPlayerPlaying() {
            System.EventArgs mediaplayerplayingEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerPlaying(this.parent, mediaplayerplayingEvent);
        }
        
        public virtual void MediaPlayerPaused() {
            System.EventArgs mediaplayerpausedEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerPaused(this.parent, mediaplayerpausedEvent);
        }
        
        public virtual void MediaPlayerForward() {
            System.EventArgs mediaplayerforwardEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerForward(this.parent, mediaplayerforwardEvent);
        }
        
        public virtual void MediaPlayerBackward() {
            System.EventArgs mediaplayerbackwardEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerBackward(this.parent, mediaplayerbackwardEvent);
        }
        
        public virtual void MediaPlayerEncounteredError() {
            System.EventArgs mediaplayerencounterederrorEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerEncounteredError(this.parent, mediaplayerencounterederrorEvent);
        }
        
        public virtual void MediaPlayerEndReached() {
            System.EventArgs mediaplayerendreachedEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerEndReached(this.parent, mediaplayerendreachedEvent);
        }
        
        public virtual void MediaPlayerStopped() {
            System.EventArgs mediaplayerstoppedEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerStopped(this.parent, mediaplayerstoppedEvent);
        }
        
        public virtual void MediaPlayerTimeChanged(int time) {
            DVLCEvents_MediaPlayerTimeChangedEvent mediaplayertimechangedEvent = new DVLCEvents_MediaPlayerTimeChangedEvent(time);
            this.parent.RaiseOnMediaPlayerTimeChanged(this.parent, mediaplayertimechangedEvent);
        }
        
        public virtual void MediaPlayerPositionChanged(float position) {
            DVLCEvents_MediaPlayerPositionChangedEvent mediaplayerpositionchangedEvent = new DVLCEvents_MediaPlayerPositionChangedEvent(position);
            this.parent.RaiseOnMediaPlayerPositionChanged(this.parent, mediaplayerpositionchangedEvent);
        }
        
        public virtual void MediaPlayerSeekableChanged(bool seekable) {
            DVLCEvents_MediaPlayerSeekableChangedEvent mediaplayerseekablechangedEvent = new DVLCEvents_MediaPlayerSeekableChangedEvent(seekable);
            this.parent.RaiseOnMediaPlayerSeekableChanged(this.parent, mediaplayerseekablechangedEvent);
        }
        
        public virtual void MediaPlayerPausableChanged(bool pausable) {
            DVLCEvents_MediaPlayerPausableChangedEvent mediaplayerpausablechangedEvent = new DVLCEvents_MediaPlayerPausableChangedEvent(pausable);
            this.parent.RaiseOnMediaPlayerPausableChanged(this.parent, mediaplayerpausablechangedEvent);
        }
        
        public virtual void MediaPlayerMediaChanged() {
            System.EventArgs mediaplayermediachangedEvent = new System.EventArgs();
            this.parent.RaiseOnMediaPlayerMediaChanged(this.parent, mediaplayermediachangedEvent);
        }
        
        public virtual void MediaPlayerTitleChanged(int title) {
            DVLCEvents_MediaPlayerTitleChangedEvent mediaplayertitlechangedEvent = new DVLCEvents_MediaPlayerTitleChangedEvent(title);
            this.parent.RaiseOnMediaPlayerTitleChanged(this.parent, mediaplayertitlechangedEvent);
        }
        
        public virtual void MediaPlayerLengthChanged(int length) {
            DVLCEvents_MediaPlayerLengthChangedEvent mediaplayerlengthchangedEvent = new DVLCEvents_MediaPlayerLengthChangedEvent(length);
            this.parent.RaiseOnMediaPlayerLengthChanged(this.parent, mediaplayerlengthchangedEvent);
        }
    }
}
